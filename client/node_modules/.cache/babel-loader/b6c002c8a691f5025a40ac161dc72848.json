{"ast":null,"code":"import _slicedToArray from \"/Users/TheBest/Desktop/Contact-Keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/TheBest/Desktop/Contact-Keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOAD, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, USER_LOADED } from '../types';\nimport setAuthToken from '../../utils/setAuthToken';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Load User\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const loginUser = () => console.log('Login User'); // Logout\n\n\n  const logoutUser = () => console.log('Logout User'); // Clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      loginUser,\n      logoutUser,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/TheBest/Desktop/Contact-Keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOAD","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","USER_LOADED","setAuthToken","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","loginUser","console","log","logoutUser","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOAD,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n  USER_LOADED\n} from '../types';\nimport setAuthToken from '../../utils/setAuthToken';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Login User\n  const loginUser = () => console.log('Login User');\n\n  // Logout\n  const logoutUser = () => console.log('Logout User');\n\n  // Clear errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        loginUser,\n        logoutUser,\n        clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}